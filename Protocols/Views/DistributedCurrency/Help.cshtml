@{
    ViewBag.Title = "Как это работает?";
}

<div class="jumbotron">
    <h1>Р-Валюта</h1>
    <p class="lead">Описание протокола распределенной валюты</p>
</div>

<dl class="dl-horizontal" style="font-size: 18px">
    <dt>Общее</dt>
    <dd>
        Протокол позволяет обмениваться криптовалютой между кошельками посредством транзакций.
        Все, что нужно знать &mdash; открытый ключ кошелька, на который Вы хотите переслать свои монетки.
        Будьте внимательны &mdash; транзакции нельзя отменить!
    </dd>
    <br/>

    <dt>Кошелек</dt>
    <dd>
        Это комбинация открытого и закрытого ключа (использован RSA с 1024битным ключом).
        Открытый ключ отображается как строка в Base64, где каждые 5 символов разделены пробелом.
        Именно в таком формате его и нужно вводить при создании транзакции.
        <br/>
        <br/>
        Каждому кошельку соответствует уникальный ID, его можно найти на странице кошелька.
        <br/>
        В системе уже существуют несколько кошельков, можно использовать @Html.ActionLink("любой из них", "Work", "DistributedCurrency"), либо @(Html.ActionLink("создать новый", "NewWallet", "DistributedCurrency")).
        <br/>
        Чтобы открыть конкретный кошелек, добавьте в адресной строке его уникальный ID
        <br />
        (Например, @Html.ActionLink("Кошелек Магистра Йоды", "Work", "DistributedCurrency", new { id = "4B7F8592-3DE6-4CCF-9A83-5E3BC0E1C003" }, null))
    </dd>
    <br/>

    <dt>Транзакции</dt>
    <dd>
        Существует 2 типа транзакций: перевод и объединение.
        <br />
        После создания транзакция отдается подтверждающим &mdash; они определяют, что начальное состояние корректно (указан допустимый перевод 
        и правильная сдача, объединение веток с общим корнем приводит к выбору наиболее длинной) и подписывают транзакцию.
        <br />
        Затем транзакция отдается майнерам &mdash; они превращают все данные в байтовый массив и складывают их по модулю 256. После этого находят
        такой байт, чтобы итоговая сумма была равна 0. Для имитации нагруженности, это делается последовательно с 0 до 255 со случайной задержкой
        на каждом шаге.
        <br />
        После закрытия транзакция считается выполненной, ее можно использовать далее.
    </dd>
    <br />

    <dt>Начало цепочки</dt>
    <dd>
        Началом цепочки транзакций служит транзакция с предком 00000000-0000-0000-0000-000000000000
    </dd>
</dl>